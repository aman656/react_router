{"version":3,"sources":["components/layout/MainNavigation.module.css","components/pages/store/index.js","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/pages/AllQuotes.js","components/layout/Navigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","quoteSlice","createSlice","name","initialState","quotesList","singleQuote","reducers","replaceList","state","action","payload","list","onlyquote","id","text","author","store","configureStore","reducer","quoteReducer","fetchingfromDataBase","dispatch","a","fetchingData","fetch","response","ok","Error","json","data","key","cartData","push","quotesActions","console","log","fetchingSingleQuote","dataget","actions","LoadingSpinner","className","classes","spinner","QuoteItem","props","item","to","QuoteList","history","useHistory","location","useLocation","isascending","URLSearchParams","search","get","sorting","onClick","quotes","map","quote","AllQuotes","alllist","useSelector","useDispatch","useEffect","length","Navigation","header","logo","nav","activeClassName","active","Layout","main","children","AddQuote","React","lazy","QuoteDetail","NotFound","App","fallback","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09fa269f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__21ukD\",\"logo\":\"MainNavigation_logo__2sP6W\",\"nav\":\"MainNavigation_nav__3mPWJ\",\"active\":\"MainNavigation_active__QP6-R\"};","import {createSlice,configureStore} from '@reduxjs/toolkit'\r\n\r\n\r\nconst quoteSlice = createSlice({\r\n    name:\"quotes\",\r\n    initialState:{quotesList:[],singleQuote:{}},\r\n    reducers:{\r\n        replaceList(state,action){\r\n            state.quotesList = action.payload.list\r\n        },\r\n        onlyquote(state,action){\r\n            state.singleQuote ={...state.singleQuote,\r\n                id:action.payload.id,\r\n                text:action.payload.text,\r\n                author:action.payload.author\r\n\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer:{quoteReducer:quoteSlice.reducer}\r\n})\r\n\r\nexport const fetchingfromDataBase = ()=>{\r\n    return async (dispatch)=>{\r\n        const fetchingData  = async()=>{\r\n            const response = await fetch(\"https://webapp-e180b-default-rtdb.firebaseio.com/quotes.json\")\r\n            if(!response.ok){\r\n                throw new Error (\"Something went wrong!\")\r\n            }\r\n            const data = await response.json()\r\n        \r\n            return data;\r\n\r\n        }\r\n        try{\r\n            const cartData = await fetchingData()\r\n            const list = [];\r\n            for (const key in cartData){\r\n                list.push({\r\n                    id:key,\r\n                    author:cartData[key].author,\r\n                    text:cartData[key].text\r\n           })\r\n\r\n            }\r\n            dispatch(quotesActions.replaceList({\r\n                list:list || [],\r\n\r\n            }))\r\n            \r\n\r\n        }catch(error){\r\n            console.log(error)\r\n            // dispatch(cartActions.showRequestStatus({\r\n            //     status:'success',\r\n            //     message:\"Data fetched \",\r\n            //     title:\"Successfully fetch the data\"\r\n            }\r\n        }\r\n\r\n    }\r\nexport const fetchingSingleQuote =(id)=>{\r\n    return async(dispatch)=>{\r\n        const singleQuote = async()=>{\r\n            const response = await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/quotes/${id}.json`)\r\n            if(!response.ok){\r\n                throw new Error (\"Something went wrong!\")\r\n            }\r\n            const data = await response.json()\r\n            return data;\r\n\r\n        }\r\n        try{\r\n            const dataget = await singleQuote()\r\n            dispatch(quotesActions.onlyquote({\r\n                id:id,\r\n                text:dataget.text,\r\n                author:dataget.author\r\n            }))\r\n\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const quotesActions = quoteSlice.actions\r\n\r\nexport default store\r\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1QaVV\",\"sorting\":\"QuoteList_sorting__1tzOt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__IEK6-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Sr_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2QrcK\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n     <Link className=\"btn\" to={`/quotes/${props.id}`}> \n       See full Screen\n     </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory ,useLocation} from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\n// const sortQuotes = (quotes, ascending) => {\n//   return quotes.sort((quoteA, quoteB) => {\n//     if (ascending) {\n//       return quoteA.id > quoteB.id ? 1 : -1;\n//     } else {\n//       return quoteA.id < quoteB.id ? 1 : -1;\n//     }\n//   });\n// };\n\nconst QuoteList = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const queryParams = new URLSearchParams(location.search)\n  const isascending = queryParams.get(\"sort\")===\"asc\"\n\n  // const newQuotes = sortQuotes(props.quotes,isascending)\n  const buttonHandler = ()=>{\n     history.push(\"/quotes?sort=\" + (isascending ? \"desc\" : \"asc\"))\n\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={buttonHandler}>Sort  {isascending ? \"Descending\":\"Ascending\"}</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from '../quotes/QuoteList'\r\nimport React, { useEffect} from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { fetchingfromDataBase } from './store'\r\nimport LoadingSpinner from '../UI/LoadingSpinner'\r\n\r\nconst AllQuotes = ()=>{\r\n    // const [DUMMY_LIST,setDUMMY_LIST] = useState([])\r\n    const alllist = useSelector(state=>state.quoteReducer.quotesList)\r\n    const dispatch = useDispatch()\r\n    // const fetchingfromDatabase = useCallback(async()=>{\r\n    \r\n    //     try{\r\n    //     const response = await fetch(\"https://webapp-e180b-default-rtdb.firebaseio.com/quotes.json\")\r\n    //     if(!response.ok){\r\n    //         throw new Error(\"Something went wrong\")\r\n    //     }\r\n    \r\n    //     const data = await response.json()\r\n        \r\n    //     const list = []\r\n    //     for (const key in data){\r\n    //         list.push({\r\n    //             id:key,\r\n    //             author:data[key].author,\r\n    //             text:data[key].text\r\n    //         })\r\n    //     }\r\n    //     setDUMMY_LIST(list)\r\n    // }catch(err){\r\n    //         console.log(err)\r\n\r\n    //     } \r\n       \r\n    // },[])\r\n    // useEffect(()=>{\r\n    //       fetchingfromDatabase()\r\n    // },[fetchingfromDatabase])\r\n    useEffect(()=>{\r\n        dispatch(fetchingfromDataBase())\r\n\r\n    },[dispatch])\r\n\r\n    return(\r\n        (alllist.length===0  ? <div className=\"centered\"><LoadingSpinner/></div>: <QuoteList quotes = {alllist}/>)\r\n    )\r\n}\r\nexport default AllQuotes","import classes from './MainNavigation.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navigation = ()=>{\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Great Quotes</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li><NavLink to=\"/quotes\" activeClassName={classes.active}>All Quotes</NavLink></li>\r\n                    <li><NavLink to=\"/addquotes\" activeClassName={classes.active}>Add a Quote</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default Navigation;","import classes from './Layout.module.css'\r\nimport Navigation from './Navigation'\r\nimport { Fragment } from \"react\"\r\n\r\nconst Layout = (props)=>{\r\n    return<Fragment>\r\n        <Navigation/>\r\n        <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n}\r\nexport default Layout","import React,{Suspense} from 'react';\nimport {Route,Switch,Redirect} from 'react-router-dom'\nimport AllQuotes from './components/pages/AllQuotes';\nimport Layout from './components/layout/Layout';\nimport LoadingSpinner from './components/UI/LoadingSpinner';\n\n\nconst AddQuote = React.lazy(()=>import('./components/pages/AddQuotes'))\nconst QuoteDetail = React.lazy(()=>import('./components/pages/Quotesdetail')) \nconst NotFound = React.lazy(()=>import('./components/pages/Not Found'))\n\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Suspense fallback={\n          <div className=\"centered\"><LoadingSpinner></LoadingSpinner></div>\n        }>\n      <Switch>\n         <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\"></Redirect>\n        </Route> \n\n        <Route path=\"/quotes\" exact>\n          <AllQuotes/>\n\n        </Route>\n        <Route path=\"/quotes/:id\">\n          <QuoteDetail/>\n\n        </Route>\n        <Route path=\"/addquotes\">\n          <AddQuote/>\n\n        </Route>\n        <Route path=\"*\">\n          <NotFound/>\n\n        </Route>\n\n      </Switch>\n      </Suspense>\n      </Layout>\n\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './components/pages/store';\n\nimport './index.css';\nimport App from './App';\nimport React from 'react';\n\nReactDOM.render(<React.StrictMode><BrowserRouter><Provider store={store}><App /></Provider></BrowserRouter></React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}