{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\react_router\\\\routing-in-react\\\\src\\\\components\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from '../quotes/QuoteList';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchingfromDataBase } from './store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  // const [DUMMY_LIST,setDUMMY_LIST] = useState([])\n  const alllist = useSelector(state => state.quoteReducer.quotesList);\n  const dispatch = useDispatch();\n  console.log(\"data\"); // const fetchingfromDatabase = useCallback(async()=>{\n  //     try{\n  //     const response = await fetch(\"https://webapp-e180b-default-rtdb.firebaseio.com/quotes.json\")\n  //     if(!response.ok){\n  //         throw new Error(\"Something went wrong\")\n  //     }\n  //     const data = await response.json()\n  //     const list = []\n  //     for (const key in data){\n  //         list.push({\n  //             id:key,\n  //             author:data[key].author,\n  //             text:data[key].text\n  //         })\n  //     }\n  //     setDUMMY_LIST(list)\n  // }catch(err){\n  //         console.log(err)\n  //     } \n  // },[])\n  // useEffect(()=>{\n  //       fetchingfromDatabase()\n  // },[fetchingfromDatabase])\n\n  useEffect(() => {\n    dispatch(fetchingfromDataBase());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: alllist\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllQuotes, \"vepMwC9WGG7ekbLIwJczBvNqha4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/react_router/routing-in-react/src/components/pages/AllQuotes.js"],"names":["QuoteList","React","useEffect","useSelector","useDispatch","fetchingfromDataBase","AllQuotes","alllist","state","quoteReducer","quotesList","dispatch","console","log"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,qBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,oBAAT,QAAqC,SAArC;;;AAEA,MAAMC,SAAS,GAAG,MAAI;AAAA;;AAClB;AACA,QAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAEA,KAAK,CAACC,YAAN,CAAmBC,UAA3B,CAA3B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAJkB,CAKlB;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AACAX,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AAEH,GAHQ,EAGP,CAACM,QAAD,CAHO,CAAT;AAKA,sBACI,QAAC,SAAD;AAAW,IAAA,MAAM,EAAIJ;AAArB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAzCD;;GAAMD,S;UAEcH,W,EACCC,W;;;KAHfE,S;AA0CN,eAAeA,SAAf","sourcesContent":["import QuoteList from '../quotes/QuoteList'\r\nimport React, { useEffect} from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { fetchingfromDataBase } from './store'\r\n\r\nconst AllQuotes = ()=>{\r\n    // const [DUMMY_LIST,setDUMMY_LIST] = useState([])\r\n    const alllist = useSelector(state=>state.quoteReducer.quotesList)\r\n    const dispatch = useDispatch()\r\n    console.log(\"data\")\r\n    // const fetchingfromDatabase = useCallback(async()=>{\r\n    \r\n    //     try{\r\n    //     const response = await fetch(\"https://webapp-e180b-default-rtdb.firebaseio.com/quotes.json\")\r\n    //     if(!response.ok){\r\n    //         throw new Error(\"Something went wrong\")\r\n    //     }\r\n    \r\n    //     const data = await response.json()\r\n        \r\n    //     const list = []\r\n    //     for (const key in data){\r\n    //         list.push({\r\n    //             id:key,\r\n    //             author:data[key].author,\r\n    //             text:data[key].text\r\n    //         })\r\n    //     }\r\n    //     setDUMMY_LIST(list)\r\n    // }catch(err){\r\n    //         console.log(err)\r\n\r\n    //     } \r\n       \r\n    // },[])\r\n    // useEffect(()=>{\r\n    //       fetchingfromDatabase()\r\n    // },[fetchingfromDatabase])\r\n    useEffect(()=>{\r\n        dispatch(fetchingfromDataBase())\r\n\r\n    },[dispatch])\r\n\r\n    return(\r\n        <QuoteList quotes = {alllist}/>\r\n    )\r\n}\r\nexport default AllQuotes"]},"metadata":{},"sourceType":"module"}