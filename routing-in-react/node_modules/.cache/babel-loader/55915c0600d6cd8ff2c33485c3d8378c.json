{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\react_router\\\\routing-in-react\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport CommentsList from '../comments/CommentsList';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = props => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [allcomments, setAllcommens] = useState([]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addingComment = comment => {\n    const sendingComment = async () => {\n      await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/comments/${props.path}.json`, {\n        method: \"POST\",\n        body: JSON.stringify(comment),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    };\n\n    try {\n      sendingComment();\n    } catch (err) {\n      throw new Error(\"Something went wrong!\");\n    }\n\n    console.log(props.path);\n  };\n\n  useEffect(() => {\n    const fetchingfromDatabase = (async () => {\n      try {\n        const response = await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/comments/${props.path}.json`);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const data = await response.json();\n        const list = [];\n\n        for (const key in data) {\n          list.push({\n            id: key,\n            text: data[key].text\n          });\n        }\n\n        setAllcommens(list);\n      } catch (err) {\n        console.log(err);\n      }\n    }, []);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onAddingComment: addingComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), allcomments.map( /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: allcomments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"zF2Cers9/476kKILr86JlOGwTe0=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/react_router/routing-in-react/src/components/comments/Comments.js"],"names":["useState","CommentsList","classes","NewCommentForm","useEffect","useCallback","Comments","props","isAddingComment","setIsAddingComment","allcomments","setAllcommens","startAddCommentHandler","addingComment","comment","sendingComment","fetch","path","method","body","JSON","stringify","headers","err","Error","console","log","fetchingfromDatabase","response","ok","data","json","list","key","push","id","text","comments","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,SAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAK,CAACU,WAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA3C;;AACA,QAAMY,sBAAsB,GAAG,MAAM;AACnCH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAGA,QAAMI,aAAa,GAAIC,OAAD,IAAW;AAC/B,UAAMC,cAAc,GAAG,YAAS;AAC7B,YAAMC,KAAK,CAAE,6DAA4DT,KAAK,CAACU,IAAK,OAAzE,EAAgF;AAC1FC,QAAAA,MAAM,EAAC,MADmF;AAE1FC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAFqF;AAG1FQ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHiF,OAAhF,CAAX;AAON,KARG;;AASA,QAAG;AACCP,MAAAA,cAAc;AAEjB,KAHD,CAIA,OAAMQ,GAAN,EAAU;AACL,YAAM,IAAIC,KAAJ,CAAW,uBAAX,CAAN;AACJ;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAK,CAACU,IAAlB;AACH,GAlBC;;AAmBFb,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMuB,oBAAoB,IAAI,YAAS;AAErC,UAAG;AACH,cAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAAE,6DAA4DT,KAAK,CAACU,IAAK,OAAzE,CAA5B;;AACA,YAAG,CAACW,QAAQ,CAACC,EAAb,EAAgB;AACZ,gBAAM,IAAIL,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,cAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,cAAMC,IAAI,GAAG,EAAb;;AACA,aAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAuB;AACnBE,UAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,YAAAA,EAAE,EAACF,GADG;AAENG,YAAAA,IAAI,EAACN,IAAI,CAACG,GAAD,CAAJ,CAAUG;AAFT,WAAV;AAIH;;AACDzB,QAAAA,aAAa,CAACqB,IAAD,CAAb;AACH,OAhBG,CAgBH,OAAMT,GAAN,EAAU;AACHE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEH;AAEJ,KAvB+B,EAuB9B,EAvB0B,CAA1B;AAyBD,GA1BQ,CAAT;AA4BE,sBACE;AAAS,IAAA,SAAS,EAAErB,OAAO,CAACmC,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAAC7B,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEI,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGJ,eAAe,iBAAI,QAAC,cAAD;AAAiB,MAAA,eAAe,EAAIK;AAApC;AAAA;AAAA;AAAA;AAAA,YAPtB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASGH,WAAW,CAAC4B,GAAZ,eAAgB,QAAC,YAAD;AAAkB,MAAA,QAAQ,EAAI5B;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAhB,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlED;;GAAMJ,Q;;KAAAA,Q;AAoEN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport CommentsList from '../comments/CommentsList'\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useEffect,useCallback } from 'react';\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const[allcomments,setAllcommens] = useState([])\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addingComment = (comment)=>{\n    const sendingComment = async()=>{\n       await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/comments/${props.path}.json`,{\n        method:\"POST\",\n        body:JSON.stringify(comment),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n    })\n}\n    try{\n        sendingComment()\n        \n    }\n    catch(err){\n         throw new Error (\"Something went wrong!\");\n    }   \n    console.log(props.path)\n}\nuseEffect(()=>{\n  const fetchingfromDatabase = (async()=>{\n\n    try{\n    const response = await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/comments/${props.path}.json`)\n    if(!response.ok){\n        throw new Error(\"Something went wrong\")\n    }\n\n    const data = await response.json()\n    \n    const list = []\n    for (const key in data){\n        list.push({\n            id:key,\n            text:data[key].text\n        })\n    }\n    setAllcommens(list)\n}catch(err){\n        console.log(err)\n\n    } \n   \n},[])\n\n})\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm  onAddingComment = {addingComment}  />}\n      <p>Comments...</p>\n      {allcomments.map(<CommentsList     comments = {allcomments}    />)}\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}