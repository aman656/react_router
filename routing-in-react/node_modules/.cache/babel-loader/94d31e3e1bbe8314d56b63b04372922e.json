{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\react_router\\\\routing-in-react\\\\src\\\\components\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from '../quotes/QuoteList';\nimport { useCallback, useEffect, useState } from 'react'; // const DUMMY_LIST = [{\n//     id:\"q1\",author:\"No one\",text:\"Follow someone\"},\n//     {id:\"q2\",author:\"Again\",text:\"You will be following\"}]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  console.log(\"nothing\");\n  const [DUMMY_LIST, setDUMMY_LIST] = useState([]);\n  const fetchingfromDatabase = useCallback(async () => {\n    try {\n      const response = await fetch(\"https://webapp-e180b-default-rtdb.firebaseio.com/quotes.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const data = await response.json();\n      const list = [];\n\n      for (const key in data) {\n        list.push({\n          id: key,\n          author: data[key].author,\n          text: data[key].text\n        });\n      }\n\n      setDUMMY_LIST(list);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n  useEffect(() => {\n    fetchingfromDatabase();\n  }, [fetchingfromDatabase]);\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DUMMY_LIST\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllQuotes, \"do2GyLITOXWGtgc1J7ux1uiJ1Z4=\");\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/react_router/routing-in-react/src/components/pages/AllQuotes.js"],"names":["QuoteList","useCallback","useEffect","useState","AllQuotes","console","log","DUMMY_LIST","setDUMMY_LIST","fetchingfromDatabase","response","fetch","ok","Error","data","json","list","key","push","id","author","text","err"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,qBAAtB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAgD,OAAhD,C,CAGA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAI;AAAA;;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BL,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAMM,oBAAoB,GAAGR,WAAW,CAAC,YAAS;AAE9C,QAAG;AACH,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAAD,CAA5B;;AACA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,YAAMC,IAAI,GAAG,EAAb;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAuB;AACnBE,QAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,UAAAA,EAAE,EAACF,GADG;AAENG,UAAAA,MAAM,EAACN,IAAI,CAACG,GAAD,CAAJ,CAAUG,MAFX;AAGNC,UAAAA,IAAI,EAACP,IAAI,CAACG,GAAD,CAAJ,CAAUI;AAHT,SAAV;AAKH;;AACDb,MAAAA,aAAa,CAACQ,IAAD,CAAb;AACH,KAjBG,CAiBH,OAAMM,GAAN,EAAU;AACHjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AAEH;AAEJ,GAxBuC,EAwBtC,EAxBsC,CAAxC;AAyBApB,EAAAA,SAAS,CAAC,MAAI;AACRO,IAAAA,oBAAoB;AACzB,GAFQ,EAEP,CAACA,oBAAD,CAFO,CAAT;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,MAAM,EAAIF;AAArB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAnCD;;GAAMH,S;;KAAAA,S;AAoCN,eAAeA,SAAf","sourcesContent":["import QuoteList from '../quotes/QuoteList'\r\nimport { useCallback, useEffect, useState} from 'react'\r\n\r\n\r\n// const DUMMY_LIST = [{\r\n//     id:\"q1\",author:\"No one\",text:\"Follow someone\"},\r\n//     {id:\"q2\",author:\"Again\",text:\"You will be following\"}]\r\n\r\nconst AllQuotes = ()=>{\r\n    console.log(\"nothing\")\r\n    const [DUMMY_LIST,setDUMMY_LIST] = useState([])\r\n    const fetchingfromDatabase = useCallback(async()=>{\r\n    \r\n        try{\r\n        const response = await fetch(\"https://webapp-e180b-default-rtdb.firebaseio.com/quotes.json\")\r\n        if(!response.ok){\r\n            throw new Error(\"Something went wrong\")\r\n        }\r\n    \r\n        const data = await response.json()\r\n        const list = []\r\n        \r\n        for (const key in data){\r\n            list.push({\r\n                id:key,\r\n                author:data[key].author,\r\n                text:data[key].text\r\n            })\r\n        }\r\n        setDUMMY_LIST(list)\r\n    }catch(err){\r\n            console.log(err)\r\n\r\n        } \r\n       \r\n    },[])\r\n    useEffect(()=>{\r\n          fetchingfromDatabase()\r\n    },[fetchingfromDatabase])\r\n\r\n    return(\r\n        <QuoteList quotes = {DUMMY_LIST}/>\r\n    )\r\n}\r\nexport default AllQuotes"]},"metadata":{},"sourceType":"module"}