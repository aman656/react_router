{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, Fragment, useState } from 'react';\nimport { Prompt } from 'react-router';\nimport Card from '../UI/Card';\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const [focused, setFocused] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value; // optional: Could validate here\n\n    props.onAdding({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n\n  const focusHandler = () => {\n    setFocused(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: focused,\n      message: location => 'Are you sure you want to leave this page?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onFocus: focusHandler,\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            ref: textInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setFocused(true);\n            },\n            className: \"btn\",\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"UuZmHpIiRsW4pI3z1HABQq2jrnM=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"names":["useRef","Fragment","useState","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","focused","setFocused","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAdding","author","text","focusHandler","location","form","isLoading","loading","control","actions"],"mappings":";;;AAAA,SAASA,MAAT,EAAgBC,QAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,KAAD,CAArC;AACA,QAAMS,cAAc,GAAGX,MAAM,EAA7B;AACA,QAAMY,YAAY,GAAGZ,MAAM,EAA3B;;AAEA,WAASa,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGL,cAAc,CAACM,OAAf,CAAuBC,KAA7C;AACA,UAAMC,WAAW,GAAGP,YAAY,CAACK,OAAb,CAAqBC,KAAzC,CAJgC,CAMhC;;AAEAV,IAAAA,KAAK,CAACY,QAAN,CAAe;AAAEC,MAAAA,MAAM,EAAEL,aAAV;AAAyBM,MAAAA,IAAI,EAAEH;AAA/B,KAAf;AACD;;AACD,QAAMI,YAAY,GAAG,MAAI;AACvBb,IAAAA,UAAU,CAAC,IAAD,CAAV;AAED,GAHD;;AAKA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AAAS,MAAA,IAAI,EAAED,OAAf;AAAwB,MAAA,OAAO,EAAKe,QAAD,IACjC;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIA,QAAC,IAAD;AAAA,6BACE;AAAO,QAAA,OAAO,EAAED,YAAhB;AAA8B,QAAA,SAAS,EAAEjB,OAAO,CAACmB,IAAjD;AAAuD,QAAA,QAAQ,EAAEZ,iBAAjE;AAAA,mBACGL,KAAK,CAACkB,SAAN,iBACC;AAAK,UAAA,SAAS,EAAEpB,OAAO,CAACqB,OAAxB;AAAA,iCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOE;AAAK,UAAA,SAAS,EAAErB,OAAO,CAACsB,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,QAAtB;AAA+B,YAAA,GAAG,EAAEjB;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE;AAAK,UAAA,SAAS,EAAEL,OAAO,CAACsB,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAU,YAAA,EAAE,EAAC,MAAb;AAAoB,YAAA,IAAI,EAAC,GAAzB;AAA6B,YAAA,GAAG,EAAEhB;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAeE;AAAK,UAAA,SAAS,EAAEN,OAAO,CAACuB,OAAxB;AAAA,iCACE;AAAU,YAAA,OAAO,EAAE,MAAI;AAACnB,cAAAA,UAAU,CAAC,IAAD,CAAV;AAAiB,aAAzC;AAAiD,YAAA,SAAS,EAAC,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAhDD;;GAAMH,S;;KAAAA,S;AAkDN,eAAeA,SAAf","sourcesContent":["import { useRef,Fragment,useState } from 'react';\nimport { Prompt } from 'react-router';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from './QuoteForm.module.css';\n\n\nconst QuoteForm = (props) => {\n  const [focused,setFocused] = useState(false)\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAdding({ author: enteredAuthor, text: enteredText });\n  }\n  const focusHandler = ()=>{\n    setFocused(true)\n\n  }\n\n  return (\n    <Fragment>\n      <Prompt  when={focused} message = {(location)=>\n        'Are you sure you want to leave this page?'\n      }      />\n    <Card>\n      <form  onFocus={focusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button   onClick={()=>{setFocused(true)}}       className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}