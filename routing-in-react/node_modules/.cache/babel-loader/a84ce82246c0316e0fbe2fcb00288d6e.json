{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\react_router\\\\routing-in-react\\\\src\\\\components\\\\pages\\\\Quotesdetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useLocation } from \"react-router\";\nimport { Route } from \"react-router\";\nimport Comments from '../comments/Comments';\nimport HighlightedQuote from '../quotes/HighlightedQuote';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_LIST = [{\n  id: \"q1\",\n  author: \"No one\",\n  text: \"Follow someone\"\n}, {\n  id: \"q2\",\n  author: \"Again\",\n  text: \"You will be folllowed by someone\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const location = useLocation();\n  let isShow;\n  console.log(location);\n\n  if (location.pathname === \"/quotes/\" + params.id) {\n    isShow = true;\n  }\n\n  const quote = DUMMY_LIST.find(quote => quote.id === params.id);\n  let error;\n\n  if (!quote) {\n    error = \"No quote found!\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [quote ? /*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      author: quote.author,\n      text: quote.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 84\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn--flat\",\n        to: `/quotes/${params.id}/comments`,\n        children: \"Load Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.id}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"XvbjsyaVL/Av168fKJzMTyJJJf4=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/react_router/routing-in-react/src/components/pages/Quotesdetail.js"],"names":["useParams","useLocation","Route","Comments","HighlightedQuote","Link","DUMMY_LIST","id","author","text","QuoteDetail","params","location","isShow","console","log","pathname","quote","find","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAChBC,EAAAA,EAAE,EAAC,IADa;AACRC,EAAAA,MAAM,EAAC,QADC;AACQC,EAAAA,IAAI,EAAC;AADb,CAAD,EAEf;AAACF,EAAAA,EAAE,EAAC,IAAJ;AAASC,EAAAA,MAAM,EAAC,OAAhB;AAAwBC,EAAAA,IAAI,EAAC;AAA7B,CAFe,CAAnB;;AAKA,MAAMC,WAAW,GAAG,MAAI;AAAA;;AACpB,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAIY,MAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAGA,QAAQ,CAACI,QAAT,KAAoB,aAAaL,MAAM,CAACJ,EAA3C,EAA8C;AAC1CM,IAAAA,MAAM,GAAG,IAAT;AACH;;AACD,QAAMI,KAAK,GAAGX,UAAU,CAACY,IAAX,CAAiBD,KAAD,IAAWA,KAAK,CAACV,EAAN,KAAWI,MAAM,CAACJ,EAA7C,CAAd;AACA,MAAIY,KAAJ;;AAEA,MAAG,CAACF,KAAJ,EAAU;AACNE,IAAAA,KAAK,GAAI,iBAAT;AACH;;AAED,sBACI;AAAA,eACCF,KAAK,gBAAE,QAAC,gBAAD;AAAmB,MAAA,MAAM,EAAIA,KAAK,CAACT,MAAnC;AAA2C,MAAA,IAAI,EAAIS,KAAK,CAACR;AAAzD;AAAA;AAAA;AAAA;AAAA,YAAF,gBAAqE;AAAA,gBAAIU;AAAJ;AAAA;AAAA;AAAA;AAAA,YAD3E,eAEA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,IAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAsC,QAAA,EAAE,EAAG,WAAUR,MAAM,CAACJ,EAAG,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUI,MAAM,CAACJ,EAAG,WAAlC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA7BD;;GAAMG,W;UACaV,S,EACEC,W;;;KAFfS,W;AA8BN,eAAeA,WAAf","sourcesContent":["import { useParams,useLocation } from \"react-router\"\r\nimport { Route } from \"react-router\"\r\nimport Comments from '../comments/Comments'\r\nimport HighlightedQuote from '../quotes/HighlightedQuote'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst DUMMY_LIST = [{\r\n    id:\"q1\",author:\"No one\",text:\"Follow someone\"},\r\n    {id:\"q2\",author:\"Again\",text:\"You will be folllowed by someone\"}\r\n]\r\n\r\nconst QuoteDetail = ()=>{\r\n    const params=  useParams()\r\n    const location = useLocation()\r\n    let isShow ;\r\n    console.log(location)\r\n    if(location.pathname===\"/quotes/\" + params.id){\r\n        isShow = true\r\n    }\r\n    const quote = DUMMY_LIST.find((quote)=>  quote.id===params.id)\r\n    let error;\r\n\r\n    if(!quote){\r\n        error  = \"No quote found!\"\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n        {quote ?<HighlightedQuote  author = {quote.author} text = {quote.text} />: <p>{error}</p>}\r\n        <div className=\"centered\">\r\n            <Link   className=\"btn--flat\"         to={`/quotes/${params.id}/comments`}>Load Comments</Link>\r\n        </div>\r\n        <Route path={`/quotes/${params.id}/comments`}>\r\n            <Comments/>\r\n\r\n        </Route>\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default QuoteDetail"]},"metadata":{},"sourceType":"module"}