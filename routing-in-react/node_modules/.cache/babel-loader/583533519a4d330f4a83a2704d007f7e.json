{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\react_router\\\\routing-in-react\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css'; // const sortQuotes = (quotes, ascending) => {\n//   return quotes.sort((quoteA, quoteB) => {\n//     if (ascending) {\n//       return quoteA.id > quoteB.id ? 1 : -1;\n//     } else {\n//       return quoteA.id < quoteB.id ? 1 : -1;\n//     }\n//   });\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isascending = queryParams.get(\"sort\") === \"asc\"; // const newQuotes = sortQuotes(props.quotes,isascending)\n\n  const buttonHandler = () => {\n    history.push(\"/quotes?sort=\" + (isascending ? \"desc\" : \"asc\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buttonHandler,\n        children: [\"Sort  \", isascending ? \"Descending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: newQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/react_router/routing-in-react/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","QuoteItem","classes","QuoteList","props","history","location","queryParams","URLSearchParams","search","isascending","get","buttonHandler","push","sorting","list","newQuotes","map","quote","id","author","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAuC,cAAvC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;AACA,QAAMC,WAAW,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA0B,KAA9C,CAJ2B,CAM3B;;AACA,QAAMC,aAAa,GAAG,MAAI;AACvBP,IAAAA,OAAO,CAACQ,IAAR,CAAa,mBAAmBH,WAAW,GAAG,MAAH,GAAY,KAA1C,CAAb;AAEF,GAHD;;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAER,OAAO,CAACY,OAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEF,aAAjB;AAAA,6BAAuCF,WAAW,GAAG,YAAH,GAAgB,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAER,OAAO,CAACa,IAAvB;AAAA,gBACGC,SAAS,CAACC,GAAV,CAAeC,KAAD,iBACb,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFZ;AAGE,QAAA,MAAM,EAAED,KAAK,CAACE,MAHhB;AAIE,QAAA,IAAI,EAAEF,KAAK,CAACG;AAJd,SACOH,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA5BD;;GAAMhB,S;UACYJ,U,EACCC,W;;;KAFbG,S;AA8BN,eAAeA,SAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useHistory ,useLocation} from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\n// const sortQuotes = (quotes, ascending) => {\n//   return quotes.sort((quoteA, quoteB) => {\n//     if (ascending) {\n//       return quoteA.id > quoteB.id ? 1 : -1;\n//     } else {\n//       return quoteA.id < quoteB.id ? 1 : -1;\n//     }\n//   });\n// };\n\nconst QuoteList = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const queryParams = new URLSearchParams(location.search)\n  const isascending = queryParams.get(\"sort\")===\"asc\"\n\n  // const newQuotes = sortQuotes(props.quotes,isascending)\n  const buttonHandler = ()=>{\n     history.push(\"/quotes?sort=\" + (isascending ? \"desc\" : \"asc\"))\n\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={buttonHandler}>Sort  {isascending ? \"Descending\":\"Ascending\"}</button>\n      </div>\n      <ul className={classes.list}>\n        {newQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}