{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\react_router\\\\routing-in-react\\\\src\\\\components\\\\pages\\\\Quotesdetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useLocation } from \"react-router\";\nimport { Route } from \"react-router\";\nimport Comments from '../comments/Comments';\nimport HighlightedQuote from '../quotes/HighlightedQuote';\nimport { Link } from \"react-router-dom\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const location = useLocation();\n  const [quotes, setQuotes] = useState({});\n  let isShow;\n  console.log(location);\n\n  if (location.pathname === \"/quotes/\" + params.id) {\n    isShow = true;\n  } // const quote = DUMMY_LIST.find((quote)=>  quote.id===params.id)\n\n\n  const fetchingSingleQuote = useCallback(async () => {\n    try {\n      const response = await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/quote/${params.id}.json`);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const data = await response.json();\n      setQuotes({\n        id: params.id,\n        ...data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n  useEffect(() => {\n    fetchingSingleQuote();\n  });\n  let error;\n\n  if (!quote) {\n    error = \"No quote found!\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [quote ? /*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      author: quote.author,\n      text: quote.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 84\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: isShow && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn--flat\",\n        to: `/quotes/${params.id}/comments`,\n        children: \"Load Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.id}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"3jfPV4khaBsm/uHuLe/ipuhDazM=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/react_router/routing-in-react/src/components/pages/Quotesdetail.js"],"names":["useParams","useLocation","Route","Comments","HighlightedQuote","Link","useCallback","useEffect","useMemo","useState","QuoteDetail","params","location","quotes","setQuotes","isShow","console","log","pathname","id","fetchingSingleQuote","response","fetch","ok","Error","data","json","err","error","quote","author","text"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAqBC,SAArB,EAA+BC,OAA/B,EAAuCC,QAAvC,QAAuD,OAAvD;;;AAGA,MAAMC,WAAW,GAAG,MAAI;AAAA;;AACpB,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAK,CAACY,MAAD,EAAQC,SAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAjC;AACA,MAAIM,MAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,MAAGA,QAAQ,CAACM,QAAT,KAAoB,aAAaP,MAAM,CAACQ,EAA3C,EAA8C;AAC1CJ,IAAAA,MAAM,GAAG,IAAT;AACH,GARmB,CASpB;;;AACA,QAAMK,mBAAmB,GAAGd,WAAW,CAAC,YAAS;AAE7C,QAAG;AACH,YAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAE,0DAAyDX,MAAM,CAACQ,EAAG,OAArE,CAA5B;;AACA,UAAG,CAACE,QAAQ,CAACE,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEIZ,MAAAA,SAAS,CAAC;AACNK,QAAAA,EAAE,EAACR,MAAM,CAACQ,EADJ;AAEN,WAAGM;AAFG,OAAD,CAAT;AAMP,KAdG,CAcH,OAAME,GAAN,EAAU;AACHX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AAEH;AAEJ,GArBsC,EAqBrC,EArBqC,CAAvC;AAsBApB,EAAAA,SAAS,CAAC,MAAI;AACRa,IAAAA,mBAAmB;AACxB,GAFQ,CAAT;AAIA,MAAIQ,KAAJ;;AAEA,MAAG,CAACC,KAAJ,EAAU;AACND,IAAAA,KAAK,GAAI,iBAAT;AACH;;AAED,sBACI;AAAA,eACCC,KAAK,gBAAE,QAAC,gBAAD;AAAmB,MAAA,MAAM,EAAIA,KAAK,CAACC,MAAnC;AAA2C,MAAA,IAAI,EAAID,KAAK,CAACE;AAAzD;AAAA;AAAA;AAAA;AAAA,YAAF,gBAAqE;AAAA,gBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,YAD3E,eAEA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKb,MAAM,iBAAI,QAAC,IAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAsC,QAAA,EAAE,EAAG,WAAUJ,MAAM,CAACQ,EAAG,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUR,MAAM,CAACQ,EAAG,WAAlC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxDD;;GAAMT,W;UACaV,S,EACEC,W;;;KAFfS,W;AAyDN,eAAeA,WAAf","sourcesContent":["import { useParams,useLocation } from \"react-router\"\r\nimport { Route } from \"react-router\"\r\nimport Comments from '../comments/Comments'\r\nimport HighlightedQuote from '../quotes/HighlightedQuote'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useCallback,useEffect,useMemo,useState } from \"react\"\r\n\r\n\r\nconst QuoteDetail = ()=>{\r\n    const params=  useParams()\r\n    const location = useLocation()\r\n    const[quotes,setQuotes] =useState({})\r\n    let isShow ;\r\n    console.log(location)\r\n    if(location.pathname===\"/quotes/\" + params.id){\r\n        isShow = true\r\n    }\r\n    // const quote = DUMMY_LIST.find((quote)=>  quote.id===params.id)\r\n    const fetchingSingleQuote = useCallback(async()=>{\r\n    \r\n        try{\r\n        const response = await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/quote/${params.id}.json`)\r\n        if(!response.ok){\r\n            throw new Error(\"Something went wrong\")\r\n        }\r\n    \r\n        const data = await response.json()\r\n    \r\n            setQuotes({\r\n                id:params.id,\r\n                ...data\r\n            })\r\n        \r\n      \r\n    }catch(err){\r\n            console.log(err)\r\n\r\n        } \r\n       \r\n    },[])\r\n    useEffect(()=>{\r\n          fetchingSingleQuote()\r\n    })\r\n\r\n    let error;\r\n\r\n    if(!quote){\r\n        error  = \"No quote found!\"\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n        {quote ?<HighlightedQuote  author = {quote.author} text = {quote.text} />: <p>{error}</p>}\r\n        <div className=\"centered\">\r\n            {isShow && <Link   className=\"btn--flat\"         to={`/quotes/${params.id}/comments`}>Load Comments</Link>}\r\n        </div>\r\n        <Route path={`/quotes/${params.id}/comments`}>\r\n            <Comments/>\r\n\r\n        </Route>\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default QuoteDetail"]},"metadata":{},"sourceType":"module"}