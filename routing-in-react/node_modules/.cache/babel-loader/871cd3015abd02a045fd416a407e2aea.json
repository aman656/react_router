{"ast":null,"code":"import{Fragment}from'react';import{useHistory,useLocation}from'react-router';import QuoteItem from'./QuoteItem';import classes from'./QuoteList.module.css';// const sortQuotes = (quotes, ascending) => {\n//   return quotes.sort((quoteA, quoteB) => {\n//     if (ascending) {\n//       return quoteA.id > quoteB.id ? 1 : -1;\n//     } else {\n//       return quoteA.id < quoteB.id ? 1 : -1;\n//     }\n//   });\n// };\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var QuoteList=function QuoteList(props){var history=useHistory();var location=useLocation();var queryParams=new URLSearchParams(location.search);var isascending=queryParams.get(\"sort\")===\"asc\";// const newQuotes = sortQuotes(props.quotes,isascending)\nvar buttonHandler=function buttonHandler(){history.push(\"/quotes?sort=\"+(isascending?\"desc\":\"asc\"));};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.sorting,children:/*#__PURE__*/_jsxs(\"button\",{onClick:buttonHandler,children:[\"Sort  \",isascending?\"Descending\":\"Ascending\"]})}),/*#__PURE__*/_jsx(\"ul\",{className:classes.list,children:props.quotes.map(function(quote){return/*#__PURE__*/_jsx(QuoteItem,{id:quote.id,author:quote.author,text:quote.text},quote.id);})})]});};export default QuoteList;","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/react_router/routing-in-react/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","QuoteItem","classes","QuoteList","props","history","location","queryParams","URLSearchParams","search","isascending","get","buttonHandler","push","sorting","list","quotes","map","quote","id","author","text"],"mappings":"AAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAuC,cAAvC,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CACA,GAAMO,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAMO,CAAAA,WAAW,CAAG,GAAIC,CAAAA,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB,CACA,GAAMC,CAAAA,WAAW,CAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,IAA0B,KAA9C,CAEA;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAI,CACvBP,OAAO,CAACQ,IAAR,CAAa,iBAAmBH,WAAW,CAAG,MAAH,CAAY,KAA1C,CAAb,EAEF,CAHD,CAIA,mBACE,MAAC,QAAD,yBACE,YAAK,SAAS,CAAER,OAAO,CAACY,OAAxB,uBACE,gBAAQ,OAAO,CAAEF,aAAjB,oBAAuCF,WAAW,CAAG,YAAH,CAAgB,WAAlE,GADF,EADF,cAIE,WAAI,SAAS,CAAER,OAAO,CAACa,IAAvB,UACGX,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAiB,SAACC,KAAD,qBAChB,KAAC,SAAD,EAEE,EAAE,CAAEA,KAAK,CAACC,EAFZ,CAGE,MAAM,CAAED,KAAK,CAACE,MAHhB,CAIE,IAAI,CAAEF,KAAK,CAACG,IAJd,EACOH,KAAK,CAACC,EADb,CADgB,EAAjB,CADH,EAJF,GADF,CAiBD,CA5BD,CA8BA,cAAehB,CAAAA,SAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useHistory ,useLocation} from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\n// const sortQuotes = (quotes, ascending) => {\n//   return quotes.sort((quoteA, quoteB) => {\n//     if (ascending) {\n//       return quoteA.id > quoteB.id ? 1 : -1;\n//     } else {\n//       return quoteA.id < quoteB.id ? 1 : -1;\n//     }\n//   });\n// };\n\nconst QuoteList = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const queryParams = new URLSearchParams(location.search)\n  const isascending = queryParams.get(\"sort\")===\"asc\"\n\n  // const newQuotes = sortQuotes(props.quotes,isascending)\n  const buttonHandler = ()=>{\n     history.push(\"/quotes?sort=\" + (isascending ? \"desc\" : \"asc\"))\n\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={buttonHandler}>Sort  {isascending ? \"Descending\":\"Ascending\"}</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}