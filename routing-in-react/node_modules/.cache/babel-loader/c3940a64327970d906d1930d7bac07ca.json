{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\react_router\\\\routing-in-react\\\\src\\\\components\\\\pages\\\\Quotesdetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useLocation } from \"react-router\";\nimport { Route } from \"react-router\";\nimport Comments from '../comments/Comments';\nimport HighlightedQuote from '../quotes/HighlightedQuote';\nimport { Link } from \"react-router-dom\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const location = useLocation();\n  const [quotes, setQuotes] = useState({});\n  let isShow;\n\n  if (location.pathname === \"/quotes/\" + params.id) {\n    isShow = true;\n  } // const quote = DUMMY_LIST.find((quote)=>  quote.id===params.id)\n\n\n  const fetchingSingleQuote = useCallback(async () => {\n    try {\n      const response = await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/quotes/${params.id}.json`);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      setQuotes({\n        id: params.id,\n        ...data\n      });\n      console.log(quotes);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [params.id]);\n  useEffect(() => {\n    fetchingSingleQuote();\n  }, [fetchingSingleQuote]);\n  let error;\n\n  if (!quotes) {\n    error = \"No quote found!\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [quotes ? /*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      author: quotes.author,\n      text: quotes.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 87\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: isShow && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn--flat\",\n        to: `/quotes/${params.id}/comments`,\n        children: \"Load Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.id}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"3jfPV4khaBsm/uHuLe/ipuhDazM=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/react_router/routing-in-react/src/components/pages/Quotesdetail.js"],"names":["useParams","useLocation","Route","Comments","HighlightedQuote","Link","useCallback","useEffect","useState","QuoteDetail","params","location","quotes","setQuotes","isShow","pathname","id","fetchingSingleQuote","response","fetch","ok","Error","data","json","console","log","err","error","author","text"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAqBC,SAArB,EAA+BC,QAA/B,QAA+C,OAA/C;;;AAGA,MAAMC,WAAW,GAAG,MAAI;AAAA;;AACpB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAK,CAACW,MAAD,EAAQC,SAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAjC;AACA,MAAIM,MAAJ;;AACA,MAAGH,QAAQ,CAACI,QAAT,KAAoB,aAAaL,MAAM,CAACM,EAA3C,EAA8C;AAC1CF,IAAAA,MAAM,GAAG,IAAT;AACH,GAPmB,CAQpB;;;AACA,QAAMG,mBAAmB,GAAGX,WAAW,CAAC,YAAS;AAE7C,QAAG;AACH,YAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAE,2DAA0DT,MAAM,CAACM,EAAG,OAAtE,CAA5B;;AACA,UAAG,CAACE,QAAQ,CAACE,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEIT,MAAAA,SAAS,CAAC;AACNG,QAAAA,EAAE,EAACN,MAAM,CAACM,EADJ;AAEN,WAAGM;AAFG,OAAD,CAAT;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AAGP,KAhBG,CAgBH,OAAMc,GAAN,EAAU;AACHF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAEH;AAGJ,GAxBsC,EAwBrC,CAAChB,MAAM,CAACM,EAAR,CAxBqC,CAAvC;AAyBAT,EAAAA,SAAS,CAAC,MAAI;AACRU,IAAAA,mBAAmB;AACxB,GAFQ,EAEP,CAACA,mBAAD,CAFO,CAAT;AAIA,MAAIU,KAAJ;;AAEA,MAAG,CAACf,MAAJ,EAAW;AACPe,IAAAA,KAAK,GAAI,iBAAT;AACH;;AAED,sBACI;AAAA,eACCf,MAAM,gBAAE,QAAC,gBAAD;AAAmB,MAAA,MAAM,EAAIA,MAAM,CAACgB,MAApC;AAA4C,MAAA,IAAI,EAAIhB,MAAM,CAACiB;AAA3D;AAAA;AAAA;AAAA;AAAA,YAAF,gBAAuE;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YAD9E,eAEA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKb,MAAM,iBAAI,QAAC,IAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAsC,QAAA,EAAE,EAAG,WAAUJ,MAAM,CAACM,EAAG,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUN,MAAM,CAACM,EAAG,WAAlC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA1DD;;GAAMP,W;UACaT,S,EACEC,W;;;KAFfQ,W;AA2DN,eAAeA,WAAf","sourcesContent":["import { useParams,useLocation } from \"react-router\"\r\nimport { Route } from \"react-router\"\r\nimport Comments from '../comments/Comments'\r\nimport HighlightedQuote from '../quotes/HighlightedQuote'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useCallback,useEffect,useState } from \"react\"\r\n\r\n\r\nconst QuoteDetail = ()=>{\r\n    const params=  useParams()\r\n    const location = useLocation()\r\n    const[quotes,setQuotes] =useState({})\r\n    let isShow ;\r\n    if(location.pathname===\"/quotes/\" + params.id){\r\n        isShow = true\r\n    }\r\n    // const quote = DUMMY_LIST.find((quote)=>  quote.id===params.id)\r\n    const fetchingSingleQuote = useCallback(async()=>{\r\n    \r\n        try{\r\n        const response = await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/quotes/${params.id}.json`)\r\n        if(!response.ok){\r\n            throw new Error(\"Something went wrong\")\r\n        }\r\n    \r\n        const data = await response.json()\r\n        console.log(data)\r\n    \r\n            setQuotes({\r\n                id:params.id,\r\n                ...data\r\n            })\r\n            console.log(quotes)\r\n        \r\n      \r\n    }catch(err){\r\n            console.log(err)\r\n\r\n        } \r\n        \r\n       \r\n    },[params.id])\r\n    useEffect(()=>{\r\n          fetchingSingleQuote()\r\n    },[fetchingSingleQuote])\r\n\r\n    let error;\r\n\r\n    if(!quotes){\r\n        error  = \"No quote found!\"\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n        {quotes ?<HighlightedQuote  author = {quotes.author} text = {quotes.text} />: <p>{error}</p>}\r\n        <div className=\"centered\">\r\n            {isShow && <Link   className=\"btn--flat\"         to={`/quotes/${params.id}/comments`}>Load Comments</Link>}\r\n        </div>\r\n        <Route path={`/quotes/${params.id}/comments`}>\r\n            <Comments/>\r\n\r\n        </Route>\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default QuoteDetail"]},"metadata":{},"sourceType":"module"}