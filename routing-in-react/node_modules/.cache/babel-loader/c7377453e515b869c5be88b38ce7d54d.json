{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\react_router\\\\routing-in-react\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s3 = $RefreshSig$();\n\nimport { useState } from 'react';\nimport CommentsList from '../comments/CommentsList';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = props => {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [allcomments, setAllcommens] = useState([]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addingComment = comment => {\n    _s2();\n\n    var _s = $RefreshSig$();\n\n    const sendingComment = async () => {\n      await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/comments/${props.path}.json`, {\n        method: \"POST\",\n        body: JSON.stringify(comment),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    };\n\n    try {\n      sendingComment();\n    } catch (err) {\n      throw new Error(\"Something went wrong!\");\n    }\n\n    useEffect(_s(() => {\n      _s();\n\n      const fetchingfromDatabase = useCallback(async () => {\n        try {\n          const response = await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/comments/${props.path}.json`);\n\n          if (!response.ok) {\n            throw new Error(\"Something went wrong\");\n          }\n\n          const data = await response.json();\n          const list = [];\n\n          for (const key in data) {\n            list.push({\n              id: key,\n              author: data[key].author,\n              text: data[key].text\n            });\n          }\n\n          setDUMMY_LIST(list);\n        } catch (err) {\n          console.log(err);\n        }\n      }, []);\n    }, \"s5uwpn7KFpT5CLnKIooRkXeZyGo=\"));\n    console.log(props.path);\n  };\n\n  _s2(addingComment, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onAddingComment: addingComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(Comments, \"TEaNleegATXrdo0wsmSG/VYRu/s=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/amans/OneDrive/Desktop/react_router/routing-in-react/src/components/comments/Comments.js"],"names":["useState","CommentsList","classes","NewCommentForm","useEffect","useCallback","Comments","props","isAddingComment","setIsAddingComment","allcomments","setAllcommens","startAddCommentHandler","addingComment","comment","sendingComment","fetch","path","method","body","JSON","stringify","headers","err","Error","fetchingfromDatabase","response","ok","data","json","list","key","push","id","author","text","setDUMMY_LIST","console","log","comments"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,SAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAC1B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAK,CAACU,WAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA3C;;AACA,QAAMY,sBAAsB,GAAG,MAAM;AACnCH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAGA,QAAMI,aAAa,GAAIC,OAAD,IAAW;AAAA;;AAAA;;AAC/B,UAAMC,cAAc,GAAG,YAAS;AAC7B,YAAMC,KAAK,CAAE,6DAA4DT,KAAK,CAACU,IAAK,OAAzE,EAAgF;AAC1FC,QAAAA,MAAM,EAAC,MADmF;AAE1FC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAFqF;AAG1FQ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHiF,OAAhF,CAAX;AAON,KARG;;AASA,QAAG;AACCP,MAAAA,cAAc;AAEjB,KAHD,CAIA,OAAMQ,GAAN,EAAU;AACL,YAAM,IAAIC,KAAJ,CAAW,uBAAX,CAAN;AACJ;;AACDpB,IAAAA,SAAS,IAAC,MAAI;AAAA;;AACZ,YAAMqB,oBAAoB,GAAGpB,WAAW,CAAC,YAAS;AAEhD,YAAG;AACH,gBAAMqB,QAAQ,GAAG,MAAMV,KAAK,CAAE,6DAA4DT,KAAK,CAACU,IAAK,OAAzE,CAA5B;;AACA,cAAG,CAACS,QAAQ,CAACC,EAAb,EAAgB;AACZ,kBAAM,IAAIH,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,gBAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,gBAAMC,IAAI,GAAG,EAAb;;AACA,eAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAuB;AACnBE,YAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,cAAAA,EAAE,EAACF,GADG;AAENG,cAAAA,MAAM,EAACN,IAAI,CAACG,GAAD,CAAJ,CAAUG,MAFX;AAGNC,cAAAA,IAAI,EAACP,IAAI,CAACG,GAAD,CAAJ,CAAUI;AAHT,aAAV;AAKH;;AACDC,UAAAA,aAAa,CAACN,IAAD,CAAb;AACH,SAjBG,CAiBH,OAAMP,GAAN,EAAU;AACHc,UAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AAEH;AAEJ,OAxByC,EAwBxC,EAxBwC,CAAxC;AA0BD,KA3BQ,kCAAT;AA4BAc,IAAAA,OAAO,CAACC,GAAR,CAAY/B,KAAK,CAACU,IAAlB;AACH,GA9CC;;AAN0B,MAMpBJ,aANoB;;AAsD1B,sBACE;AAAS,IAAA,SAAS,EAAEX,OAAO,CAACqC,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAAC/B,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEI,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGJ,eAAe,iBAAI,QAAC,cAAD;AAAiB,MAAA,eAAe,EAAIK;AAApC;AAAA;AAAA;AAAA;AAAA,YAPtB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlED;;IAAMP,Q;;KAAAA,Q;AAoEN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport CommentsList from '../comments/CommentsList'\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useEffect,useCallback } from 'react';\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const[allcomments,setAllcommens] = useState([])\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addingComment = (comment)=>{\n    const sendingComment = async()=>{\n       await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/comments/${props.path}.json`,{\n        method:\"POST\",\n        body:JSON.stringify(comment),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n    })\n}\n    try{\n        sendingComment()\n        \n    }\n    catch(err){\n         throw new Error (\"Something went wrong!\");\n    }\n    useEffect(()=>{\n      const fetchingfromDatabase = useCallback(async()=>{\n    \n        try{\n        const response = await fetch(`https://webapp-e180b-default-rtdb.firebaseio.com/comments/${props.path}.json`)\n        if(!response.ok){\n            throw new Error(\"Something went wrong\")\n        }\n    \n        const data = await response.json()\n        \n        const list = []\n        for (const key in data){\n            list.push({\n                id:key,\n                author:data[key].author,\n                text:data[key].text\n            })\n        }\n        setDUMMY_LIST(list)\n    }catch(err){\n            console.log(err)\n\n        } \n       \n    },[])\n\n    })\n    console.log(props.path)\n}\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm  onAddingComment = {addingComment}  />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}